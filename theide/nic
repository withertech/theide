#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Sat Dec  5 18:12:23 2020
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don

set template [lindex $argv 0];
set timeout -1
spawn /home/witherking25/theos/bin/nic.pl
match_max 100000
expect -exact "NIC 2.0 - New Instance Creator\r
------------------------------\r
  \[1.\] iphone/activator_event\r
  \[2.\] iphone/activator_listener\r
  \[3.\] iphone/application_modern\r
  \[4.\] iphone/application_swift\r
  \[5.\] iphone/cydget\r
  \[6.\] iphone/flipswitch_switch\r
  \[7.\] iphone/framework\r
  \[8.\] iphone/library\r
  \[9.\] iphone/notification_center_widget\r
  \[10.\] iphone/notification_center_widget-7up\r
  \[11.\] iphone/preference_bundle_modern\r
  \[12.\] iphone/theme\r
  \[13.\] iphone/tool\r
  \[14.\] iphone/tool_swift\r
  \[15.\] iphone/tweak\r
  \[16.\] iphone/tweak_with_simple_preferences\r
  \[17.\] iphone/xpc_service\r
Choose a Template (required): "
send -- "$template\r"
if {$template == 1} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	set bfilter [lindex $argv 4];
	set kfilter [lindex $argv 5];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
	expect "MobileSubstrate Bundle filter"
	send -- "$bfilter\r"
	expect "List of applications to terminate upon installation (space-separated, '-' for none)"
	send -- "$kfilter\r"
}
if {$template == 2} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	set bfilter [lindex $argv 4];
	set kfilter [lindex $argv 5];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
	expect "MobileSubstrate Bundle filter"
	send -- "$bfilter\r"
	expect "List of applications to terminate upon installation (space-separated, '-' for none)"
	send -- "$kfilter\r"
}
if {$template == 3} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	set cprefix [lindex $argv 4];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
	expect "Class name prefix"
	send -- "$cprefix\r"
}
if {$template == 4} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
}
if {$template == 5} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	set kfilter [lindex $argv 4];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
	expect "List of applications to terminate upon installation (space-separated, '-' for none)"
	send -- "$kfilter\r"
}
if {$template == 6} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	set kfilter [lindex $argv 4];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
	expect "List of applications to terminate upon installation (space-separated, '-' for none)"
	send -- "$kfilter\r"
}
if {$template == 7} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
}
if {$template == 8} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
}
if {$template == 9} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	set kfilter [lindex $argv 4];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
	expect "List of applications to terminate upon installation (space-separated, '-' for none)"
	send -- "$kfilter\r"
}
if {$template == 10} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	set wsection [lindex $argv 4];
	set kfilter [lindex $argv 5];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
	expect "Widget section"
	send -- "$wsection\r"
	expect "List of applications to terminate upon installation (space-separated, '-' for none)"
	send -- "$kfilter\r"
}
if {$template == 11} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	set cprefix [lindex $argv 4];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
	expect "Class name prefix"
	send -- "$cprefix\r"
}
if {$template == 12} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
}
if {$template == 13} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
}
if {$template == 14} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
}
if {$template == 15} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	set bfilter [lindex $argv 4];
	set kfilter [lindex $argv 5];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
	expect "MobileSubstrate Bundle filter"
	send -- "$bfilter\r"
	expect "List of applications to terminate upon installation (space-separated, '-' for none)"
	send -- "$kfilter\r"
}
if {$template == 16} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	set bfilter [lindex $argv 4];
	set kfilter [lindex $argv 5];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
	expect "MobileSubstrate Bundle filter"
	send -- "$bfilter\r"
	expect "List of applications to terminate upon installation (space-separated, '-' for none)"
	send -- "$kfilter\r"
}
if {$template == 17} {
	set projname [lindex $argv 1];
	set pkgname [lindex $argv 2];
	set maintname [lindex $argv 3];
	expect "Project Name"
	send -- "$projname\r"
	expect "Package Name"
	send -- "$pkgname\r"
	expect "Author/Maintainer Name"
	send -- "$maintname\r"
}
expect eof
